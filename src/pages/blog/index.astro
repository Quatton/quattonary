---
import Icon from "astro-icon";
import { getCollection } from "astro:content";

export const prerender = true;

import { getEntry } from "astro:content";
import MarkdownLayout from "@/layouts/MarkdownLayout.astro";
import { formatDate } from "@/lib/utils";
const blogPreface = await getEntry("front", "blog");
const { Content } = await blogPreface.render();

const blogPosts = (await getCollection("blogMeta")).toSorted(
  (a, b) => b.data.date.getTime() - a.data.date.getTime()
);
---

<MarkdownLayout title={blogPreface.data.title} path={blogPreface.data.path}>
  <Content />
  <div class="grid grid-cols-2 md:grid-cols-3 gap-4 not-prose">
    {
      blogPosts.map((blog) => {
        return (
          <a
            href={`/blog/${blog.id}`}
            class="rounded-md aspect-[9/16] md:aspect-square shadow-neutral-800 shadow-md transition-all overflow-visible"
            transition:name="book"
          >
            <div class="font-serif grid-rows-[1fr_auto] origin-left transition-all w-full h-full grid grid-[1fr_auto] place-items-center place-content-center bg-neutral-900 rounded-md p-4">
              <h2
                class="font-bold text-lg md:text-xl text-balance"
                transition:name="book-title"
              >
                {blog.data.title}
              </h2>
              <p
                class="flex items-center gap-2 text-xs md:text-sm text-neutral-400"
                transition:name="book-date"
              >
                <Icon name="noto:calendar" class="w-4 h-4" />
                {formatDate(blog.data.date)}
              </p>
            </div>
          </a>
        );
      })
    }
  </div>
</MarkdownLayout>

<style lang="scss">
  a {
    perspective: 800px;
    &:hover {
      div {
        transform-origin: left;
        transform: rotateY(-30deg);
      }
    }
  }
</style>
