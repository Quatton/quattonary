---
import { Icon } from "astro-icon/components";
import Layout from "../layouts/Layout.astro";
import { pages } from "../utils/pages";
---

<Layout title="Quattonary">
  <div class="wrapper">
    <section>
      {
        pages.map((page) => (
          <article
            style={{
              backgroundColor: `hsl(250, 5%,  ${page.id}%)`,
            }}
          >
            <a
              href={page.slug.match(/^http/) ? `${page.slug}` : `/${page.slug}`}
            >
              {page.cover && <Icon name={page.cover} color={page.color} />}
              {page.name}
            </a>
          </article>
        ))
      }
    </section>
  </div>
</Layout>

<style lang="scss">
  .wrapper {
    @apply w-full h-full flex items-center justify-center overflow-hidden;
  }

  section {
    @apply grid place-items-stretch aspect-square;
    width: 80vmin;
    grid-template-rows: repeat(112, 1fr);
    grid-template-columns: repeat(112, 1fr);

    &:is(:hover) {
      article,
      a {
        border-radius: 50% 50%;
        opacity: 0.5;
      }
      article {
        scale: 0.9;
      }
    }

    article:hover {
      &,
      a {
        border-radius: 0 0;
        scale: 1;
        opacity: 1;
      }
    }
  }

  article {
    @apply flex items-center justify-center isolate
    relative shadow-xl font-semibold;
    transition: all 300ms ease;

    [astro-icon] {
      position: absolute;
      opacity: 0.5;
      width: 50%;
      transform: translateX(-100%);

      transition: transform 300ms ease-out;
    }

    a {
      @apply absolute overflow-hidden flex items-center justify-center select-none;
      color: var(--color-text);
      inset: 0;
      &:is(:hover, :focus) {
        [astro-icon] {
          transform: translateX(0);
        }
      }
    }
  }

  // DON'T EVER EDIT THIS
  $widths: 50, 35, 27, 8, 19, 15, 17, 11, 6, 24, 29, 25, 9, 2, 7, 18, 16, 42, 4,
    37, 33;

  @for $i from 1 through 21 {
    section > article:nth-child(#{$i}) {
      $width: nth($widths, $i);
      font-size: calc($width / 10) + vmin;
      grid-column: span $width / span $width;
      grid-row: span $width / span $width;
    }
  }
</style>
